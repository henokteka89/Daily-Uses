USE [master]
GO
Create or ALTER PROC [dbo].[sp_scriptoutindex] @indexname NVARCHAR(255), 
@tablename NVARCHAR(255), @dbname NVARCHAR(255) = 'es'
AS
DECLARE @sql NVARCHAR(MAX) = 'USE ' + QUOTENAME(@dbname) + ';
DECLARE @sort_in_tempdb BIT = 0, @statistics_norecompute BIT = 0, @drop_existing BIT = 0, @online BIT = 0,
        @maxdop TINYINT = 1, @data_compression BIT = 0, @data_compression_type VARCHAR(4) = ''NONE'';

SET NOCOUNT ON
IF EXISTS (SELECT * FROM [tempdb].[sys].[objects] WHERE [name] LIKE ''#indexProperties%'')
    DROP TABLE #indexProperties;
SELECT
    SCHEMA_NAME(t.[schema_id]) AS [schema_name],
    i.[name] AS [table_name], i.[name] AS [index_name],
    c.[name] AS [column_name], ic.key_ordinal AS [column_position],
    ic.is_included_column AS [is_included], i.fill_factor, i.is_padded,i.is_disabled,
    i.allow_row_locks, i.allow_page_locks, i.has_filter, i.filter_definition,
    i.ignore_dup_key, fg.[name] AS [filegroup]
INTO #indexProperties
FROM sys.indexes i
INNER JOIN sys.tables t ON i.[object_id] = t.[object_id]
INNER JOIN sys.index_columns ic ON i.object_id = ic.object_id AND i.index_id = ic.index_id
INNER JOIN sys.columns c ON ic.object_id = c.object_id AND ic.column_id = c.column_id
LEFT JOIN sys.filegroups fg ON i.data_space_id = fg.data_space_id
WHERE i.[name] = ''' + @indexname + ''' AND t.[name] = ''' + @tablename + '''

DECLARE @colList NVARCHAR(MAX) = '''';
DECLARE @includedColList NVARCHAR(MAX) = '''';
DECLARE @fillFactor INT, @is_padded BIT, @is_disabled BIT, @allow_row_locks BIT, @allow_page_locks BIT;
DECLARE @is_filtered BIT, @filterDefinition NVARCHAR(MAX), @ignoredupkey BIT, @filegroup NVARCHAR(100);

SELECT @colList = STRING_AGG(column_name, '', '')
FROM #indexProperties
WHERE is_included = 0;

SELECT @includedColList = STRING_AGG(column_name, '', '')
FROM #indexProperties
WHERE is_included = 1;

SELECT 
    @fillFactor = fill_factor,
    @is_padded = is_padded,
    @is_disabled = is_disabled,
    @allow_row_locks = allow_row_locks,
    @allow_page_locks = allow_page_locks,
    @is_filtered = has_filter,
    @filterDefinition = filter_definition,
    @ignoredupkey = ignore_dup_key,
    @filegroup = [filegroup]
FROM #indexProperties;

PRINT 
     ''CREATE NONCLUSTERED INDEX [' + @indexname + '] ON ['' + SCHEMA_NAME() + ''].[' + @tablename + '] ('' + @colList + '') ''
    + CASE WHEN @includedColList IS NOT NULL THEN '' INCLUDE ('' + @includedColList + '')'' ELSE '''' END
    + CASE WHEN @is_filtered = 1 THEN '' WHERE ('' + @filterDefinition + '')'' ELSE '''' END
    + ''
WITH ( PAD_INDEX = '' + CASE WHEN @is_padded = 1 THEN ''ON,'' ELSE ''OFF,'' END
    + '' FILLFACTOR = '' + CASE WHEN @fillFactor = 0 THEN ''100'' 
	ELSE CAST(ISNULL(CAST(@fillFactor AS INT),100) AS VARCHAR(3)) END + '', ''
    + '' IGNORE_DUP_KEY = '' + CASE WHEN @ignoredupkey = 1 THEN ''ON,'' ELSE ''OFF,'' END
    + '' ALLOW_ROW_LOCKS = '' + CASE WHEN @allow_row_locks = 1 THEN ''ON,'' ELSE ''OFF,'' END
    + '' ALLOW_PAGE_LOCKS = '' + CASE WHEN @allow_page_locks = 1 THEN ''ON,'' ELSE ''OFF,'' END
    + '' SORT_IN_TEMPDB = '' + CASE WHEN @sort_in_tempdb = 1 THEN ''ON,'' ELSE ''OFF,'' END
    + '' STATISTICS_NORECOMPUTE = '' + CASE WHEN @statistics_norecompute = 1 THEN ''ON,'' ELSE ''OFF,'' END
    + '' DROP_EXISTING = '' + CASE WHEN @drop_existing = 1 THEN ''ON,'' ELSE ''OFF,'' END
    + '' ONLINE = '' + CASE WHEN @online = 1 THEN ''ON,'' ELSE ''OFF,'' END
    + '' MAXDOP = '' + CAST(ISNULL(CAST(@maxdop AS INT),0) AS VARCHAR(1)) + '', ''
    + '' DATA_COMPRESSION = '' + CASE WHEN @data_compression = 1 
	THEN QUOTENAME(@data_compression_type, '''') ELSE ''NONE'' END
    + '' );'';

SET NOCOUNT OFF ';
--PRINT @sql
EXEC sp_executesql @sql
